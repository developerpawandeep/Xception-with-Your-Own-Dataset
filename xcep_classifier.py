# -*- coding: utf-8 -*-
"""xcep_classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zmDIG7fM-5TdHqYiwm_K64epFxcUSh6g
"""

!git clone https://github.com/otenim/Xception-with-Your-Own-Dataset.git

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/Xception-with-Your-Own-Dataset/

import os

a = open("classes.txt", "w")
for i in os.listdir("/content/drive/My Drive/cropped_faces/"):
  print(i)
  a.write(i + os.linesep)
a.close()

!python fine_tune.py /content/drive/My\ Drive/cropped_faces /content/Xception-with-Your-Own-Dataset/classes.txt /content/drive/My\ Drive/xception_classifier --epochs_pre 10 --epochs_fine 20 --lr_pre 5e-3 --lr_fine 5e-4

print(model.summary())

import tensorflow as tf
tf.keras.utils.plot_model(
    model,
    to_file='model.png',
    show_shapes=False,
    show_layer_names=True,
    rankdir='TB',
    expand_nested=False,
    dpi=96
)

import argparse
import numpy as np
from keras.applications.xception import preprocess_input
from keras.preprocessing import image
from keras.models import load_model


model_path="/content/drive/My Drive/xception_classifier/model_fine_final.h5"
classes_path="/content/Xception-with-Your-Own-Dataset/classes.txt"
core_path="/content/drive/My Drive/cropped_faces_test/"
top_n=1
model = load_model(model_path)

for i in os.listdir(core_path):
  root_path=core_path+i+"/"
  for j in os.listdir(root_path):
    image_path=root_path+j
    # load class names
    classes = []
    with open(classes_path, 'r') as f:
        classes = list(map(lambda x: x.strip(), f.readlines()))

    # load an input image
    img = image.load_img(image_path, target_size=(299, 299))
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)

    # predict
    pred = model.predict(x)[0]
    result = [(classes[i], float(pred[i]) * 100.0) for i in range(len(pred))]
    result.sort(reverse=True, key=lambda x: x[1])
    print(image_path)
    for i in range(top_n):
        (class_name, prob) = result[i]
        print("Top %d ====================" % (i + 1))
        print("Class name: %s" % (class_name))
        print("Probability: %.2f%%" % (prob))

!python inference.py /content/drive/My\ Drive/xception_classifier/model_fine_final.h5 /content/Xception-with-Your-Own-Dataset/classes.txt /content/drive/My\ Drive/cropped_faces_test/Alan\ Alda/cropped563.jpg --top_n 1

